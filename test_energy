ItemUse = {
        use: function(itemId, bonuses, type) {
            var item = Bag.getItemByItemId(itemId);
            var title = "";
            var message = "";
            switch (type) {
            case 'recipe':
                title = 'Naučit se recept?';
                message = "<div style='text-align:center'>" + 'Nauč se vyrobit nový předmět. ' + "</div>";
                break;
            default:
                if (undefined != item.obj.level && item.obj.level > Character.level)
                    return new UserMessage(s('Předmět vyžaduje úroveň postavy %1', item.obj.level),UserMessage.TYPE_ERROR).show();
                if (undefined != item.obj.duelLevel && item.obj.duelLevel > Character.duelLevel)
                    return new UserMessage(s('Tato položka vyžaduje duelovou úroveň %1!', item.obj.duelLevel),UserMessage.TYPE_ERROR).show();
                title = 'Použít předmět:';
                message = "<div style='text-align:center'>" + 'Opravdu to chceš použít? Získáš tyto výhody:' + "<br /><div style='margin:10px;font-size:12pt;font-weight:bold;'>" + bonuses.join("<br />") + "</div>";
                if (item.obj.usetype == "buff") {
                    message += "<div style='color: red;margin:10px;font-size:12pt;font-weight:bold;'>";
                    if (BuffList[item.obj.bufftype] != null)
                        message += 'Stávající posílení budou tímto nahrazeny.' + '<br />';
                    message += 'Posilnění zmizí, v případě že bude práce přerušena.' + "</div>";
                }
                if ($.fn.isInArray(itemId, [21340, 21341, 21342, 21343]))
                    message += '<p>' + 'Automatické prodloužení prémia, aktivní.' + '<br />' + 'Pokud si to nepřeješ, prosíme, překontroluj si nastavení. ' + '</p>';
                break;
            }
            new west.gui.Dialog(title,message,west.gui.Dialog.SYS_QUESTION).addButton("yes", function() {
                ItemUse.doIt(itemId);
            }).addButton("cancel", function() {}).show();
        },
        doIt: function(itemId, callback) {
            Ajax.remoteCall("itemuse", "use_item", {
                item_id: itemId,
                lastInvId: Bag.getLastInvId()
            }, function(res) {
                if (res.error) {
                    if (res.error_data && res.error_data.usedup) {
                        delete Bag.itemCooldown[itemId];
                        EventHandler.signal('cooldown_changed');
                        EventHandler.signal('inventory_changed');
                        EventHandler.signal('item_lifetime_changed', [itemId, null]);
                    }
                    return new UserMessage(res.msg,UserMessage.TYPE_ERROR).show();
                }
                var i, info = [], m, ls, j, mm;
                var domid = 1;
                if (Character.cooldown != res.msg.cooldown) {
                    Character.cooldown = res.msg.cooldown;
                    EventHandler.signal("cooldown_changed");
                }
                if (res.msg.itemCooldown) {
                    Bag.itemCooldown[itemId] = res.msg.itemCooldown;
                    EventHandler.signal("cooldown_changed");
                }
                if (res.msg.itemLifetime) {
                    EventHandler.signal('item_lifetime_changed', [itemId, res.msg.itemLifetime]);
                }
                Bag.updateChanges(res.msg.changes);
                for (i = 0; i < res.msg.effects.length; i += 1) {
                    m = res.msg.effects[i];
                    switch (m.type) {
                    case 'experience':
                    case 'level':
                        info.push(new tw2widget.reward.ExpReward(Math.ceil(m.experience)).toString());
                        break;
                    case 'dollar':
                        info.push(new tw2widget.reward.DollarReward(Math.ceil(m.dollar)).toString());
                        break;
                    case 'walk_time':
                        TaskQueue.init(m.walktime.tq);
                        info.push(s("Tvá cesta je kratší a to z %1 na %2.", m.walktime.oldd.formatDuration(), m.walktime.newd.formatDuration()));
                        break;
                    case 'hitpoints':
                        Character.setHealth(m.hitpoints);
                        info.push(s("Zdraví doplněno."));
                        break;
                    case 'duel_motivation':
                        info.push(s("Tvá duelová motivace se zvýšila a teď je %1.", Math.round(m.duelmotivation * 100) + "%"));
                        if (m.duelmotivation_npc) {
                            info.push(s("Tvá duelová motivace s bandity byla zvýšena o %1.", Math.round(m.duelmotivation_npc * 100) + "%"));
                            Character.setNPCDuelMotivation(m.duelmotivation_npc);
                        }
                        Character.setDuelMotivation(m.duelmotivation);
                        break;
                    case 'work_motivation':
                        ls = [];
                        info.push("Tvá pracovní motivace se zvýšila.");
                        info.push(ls.join("<br />"));
                        EventHandler.signal('jobmotivation_change');
                        break;
                    case 'hitpoints':
                        Character.setHealth(m.hitpoints);
                        info.push(s(ngettext("Tvé zdraví se zvýšilo na %1 bod.", new Array("Tvé zdraví se zvýšilo na %1 bod.","Tvé zdraví se zvýšilo na %1 body.","Tvé zdraví se zvýšilo na %1 bodů."), Math.round(m.hitpoints)), Math.round(m.hitpoints)));
                        break;
                    case 'buff':
                        if (m.buff.duration > 0) {
                            info.push(s("Následné hodnoty zesílí  %1:", m.buff.duration.formatDurationBuffWay()));
                        } else {
                            info.push(s(ngettext("Následná hodnota se zvýší o %1 činnost:", new Array("Následná hodnota se zvýší o %1 činnost:","Následná hodnota se zvýší o %1 činnosti:","Následná hodnota se zvýší o %1 činností:"), m.buff.charge), m.buff.charge));
                        }
                        for (var w = 0; w < m.buff.description.length; w += 1) {
                            info.push(m.buff.description[w]);
                        }
                        Character.setSpeed(m.char_speed);
                        WearSet.setWorkPointBonus(m.workPointBonus);
                        CharacterSkills.setBuffs(m.all);
                        CharacterSkills.updateAllBonuspoints(m.bonus.allBonuspoints);
                        break;
                    case 'energy':
                        Character.setEnergy(m.energy);
                        info.push(s(ngettext("Tvá energie se zvýšila na %1 bod.", new Array("Tvá energie se zvýšila na %1 bod.","Tvá energie se zvýšila na %1 body.","Tvá energie se zvýšila na %1 bodů."), Math.floor(m.energy)), Math.floor(m.energy)));
                        break;
                    case 'lottery':
                    case 'content':
                        ls = ["<div style='text-align:center'>"];
                        m.items.each(function(m) {
                            var id = domid++;
                            ls.push("<div class='bag_item' id='item_use_content_" + id + "'></div>");
                            var data = ItemManager.get(m.item_id);
                            var item = new tw2widget.Item(data,'item_popup_item').setCount(m.count);
                            window.setTimeout(function() {
                                (function($) {
                                    $('#item_use_content_' + id).append(item.getMainDiv());
                                }
                                )(jQuery);
                            }, 100);
                        });
                        info.push('Dostaneš ..... :' + "<br />" + ls.join("") + "</div><br clear='all' />");
                        break;
                    case 'learn_recipe':
                        var id = domid++;
                        var itemData = ItemManager.get(ItemManager.get(m.recipe).craftitem);
                        var item = new tw2widget.Item(itemData,'item_popup_item');
                        ls = ["<div class='bag_item' id='item_use_content_" + id + "' style='left: 50%;margin-left: -36px;'></div>"];
                        window.setTimeout(function() {
                            (function($) {
                                $('#item_use_content_' + id).append(item.getMainDiv());
                            }
                            )(jQuery);
                        }, 100);
                        info.push('Teď můžeš vyrobit následující předmět:' + "<br /><br />" + ls.join("") + "<br clear='all' />");
                        Crafting.addRecipe(itemData);
                        break;
                    case 'reskill_skills':
                    case 'reskill_attributes':
                    case 'reskill_both':
                        if (m.type == "reskill_both" || m.type == "reskill_skills") {
                            info.push(s(ngettext("Nyní máš %1 schopnost.", new Array("Nyní máš %1 schopnost.","Nyní máš %1 schopnosti.","Nyní máš %1 schopností."), m.free_skillpoints), m.free_skillpoints));
                            CharacterSkills.setFreeSkillPoints(m.free_skillpoints);
                        }
                        if (m.type == "reskill_both" || m.type == "reskill_attributes") {
                            info.push(s(ngettext("Nyní máš %1 atribut.", new Array("Nyní máš %1 atribut.","Nyní máš %1 atributy.","Nyní máš %1 atributů."), m.free_attributepoints), m.free_attributepoints));
                            CharacterSkills.setFreeAttrPoints(m.free_attributepoints);
                            for (var l = 0; l < CharacterSkills.allAttrKeys.length; l++)
                                CharacterSkills.getAttribute(CharacterSkills.allAttrKeys[l]).setPoints(0);
                        }
                        CharacterSkills.update(false, m.skills, false, false);
                        break;
                    case 'premium':
                        info.push(m.title + ' ' + "končí " + m.time + "<br/><br/><span style='font-size:11px;'>" + "Poznámka: Prosíme, zkontroluj si své nastavení pro automatické prodlužování prémiových výhod." + "</span>");
                        break;
                    case 'coupons':
                        Character.setUpb(m.total);
                        info.push(s(ngettext("Dostáváš %1 dluhopis", new Array("Dostáváš %1 dluhopis","Dostáváš %1 dluhopisy","Dostáváš %1 dluhopisů"), m.coupons), m.coupons));
                        break;
                    case 'sleep':
                        info.push('Šel sis zdřímnout' + ' (' + m.duration.formatDurationWorkProgress() + ')');
                        TaskQueue.pushToQueue(TaskFactory(m.task));
                        EventHandler.signal('taskqueue-updated', [TaskQueue.queue]);
                        break;
                    case 'nuggets':
                        info.push(s(ngettext('Obdržel jsi %1 zlatý nugget.', new Array('Obdržel jsi %1 zlatý nugget.','Obdržel jsi %1 zlaté nuggety.','Obdržel jsi %1 zlatých nuggetů.'), m.amount), m.amount));
                        Character.addNuggets(m.amount);
                        break;
                    case 'ses':
                        info.push('Dostaneš:' + ' <img src="https://westcz.innogamescdn.com/images/icons/' + m['event'] + '.png" title="' + m.name.escapeHTML() + '" /> ' + m.amount);
                        break;
                    case 'duellevel':
                        Character.setDuelLevel(m.duelLevel);
                        info.push(new tw2widget.reward.SacrificeDuelLevelReward(m.removed).toString());
                        break;
                    case 'duelexp':
                        Character.setDuelLevel(m.duelLevel);
                        info.push(new tw2widget.reward.SacrificeDuelExpReward(m.removed).toString());
                        break;
                    }
                }
                EventHandler.signal('item_used', [itemId]);
                new west.gui.Dialog("Předmět použit").setIcon(west.gui.Dialog.SYS_OK).setText("<div>" + info.join("<br/>") + "</div>").addButton("ok").show();
            });
        }
    };
}
